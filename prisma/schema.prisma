generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ContactSubmission {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String
  purpose   String
  message   String
  status    String   @default("new")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model B2BSubmission {
  id        Int      @id @default(autoincrement())
  name      String
  company   String
  email     String
  phone     String
  country   String
  message   String
  status    String   @default("new")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StudyPage {
  id             Int        @id @default(autoincrement())
  title          String
  slug           String     @unique
  description    String
  bannerUrl      String?
  seoTitle       String?
  seoDescription String?
  isActive       Boolean    @default(true)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  categories     Category[]
}

model Category {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  studyPageId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  cards       Card[]
  studyPage   StudyPage @relation(fields: [studyPageId], references: [id], onDelete: Cascade)
  
  @@unique([studyPageId, title])
}

model Card {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  imageUrl    String?
  cardCategory String?
  duration    String?
  location    String?
  intake      String?
  requirements String?
  categoryId  Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  category    Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  details     DetailPage?
  
  @@unique([categoryId, title])
}

model DetailPage {
  id        Int            @id @default(autoincrement())
  content   String
  cardId    Int            @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  card      Card           @relation(fields: [cardId], references: [id], onDelete: Cascade)
  tables    DynamicTable[]
}

model DynamicTable {
  id           Int        @id @default(autoincrement())
  title        String
  description  String?
  detailPageId Int
  columns      Json       // Array of column definitions
  rows         Json       // Array of row data
  iconUrl      String?    // Optional table icon
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  detailPage   DetailPage @relation(fields: [detailPageId], references: [id], onDelete: Cascade)
}

model LuckyDrawEntry {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String
  country   String
  reason    String
  isWinner  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SiteSettings {
  id              Int      @id @default(autoincrement())
  siteName        String   @default("Study Abroad with Hadi")
  siteUrl         String   @default("https://studyabroadwithhadi.info")
  logoUrl         String?
  faviconUrl      String?
  contactEmail    String
  contactPhone    String
  address         String?
  aboutContent    String?
  metaTitle       String?
  metaDescription String?
  primaryColor    String   @default("#3b82f6")
  secondaryColor  String   @default("#6366f1")
  accentColor     String   @default("#f59e0b")
  adminName       String   @default("Hadi")
  adminEmail      String   @default("admin@studyabroadwithhadi.info")
  adminPhone      String   @default("+1-234-567-8900")
  adminTitle      String   @default("Expert Visa Consultant")
  adminBio        String?
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Testimonial {
  id         Int      @id @default(autoincrement())
  name       String
  country    String
  university String
  course     String
  content    String
  rating     Int      @default(5)
  imageUrl   String?
  isFeatured Boolean  @default(false)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      String   @default("USER")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Inquiry {
  id              Int      @id @default(autoincrement())
  name            String
  email           String
  phone           String
  country         String
  preferredStudy  String
  message         String
  status          String   @default("PENDING")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model TeamMember {
  id          Int      @id @default(autoincrement())
  name        String
  role        String
  bio         String?
  imageUrl    String?
  email       String?
  phone       String?
  linkedinUrl String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}